# TODO: Give nickname, exclude child cultures, convertion game rules?

# Remove ongoing modifiers when title changes hands: on_title_gain, on_county_occupied
remove_genocide_modifiers = { 
    if = {
        limit = {
            has_variable = purge_population_current_progress
        }
        set_variable = { name = purge_population_current_progress value = 0 }
    }
    if = { 
        limit = { 
            has_county_modifier = ongoing_corruption_modifier
        }

        remove_county_modifier = ongoing_corruption_modifier
    }
    if = {
        limit = {
            has_county_modifier = ongoing_cleansing_modifier
        }

        remove_county_modifier = ongoing_cleansing_modifier
    }
    if = {
        limit = {
            has_county_modifier = ongoing_genocide_modifier
        }

        remove_county_modifier = ongoing_genocide_modifier
    }
}

add_corruption_modifier = {
    remove_corruption_modifiers = yes
    set_variable = {
        name = corruption_type
        value = flag:$MOD$
    }
    add_county_modifier = $MOD$
    remove_variable = corruption_type
}

remove_corruption_modifiers = {
    if = {
        limit = {
            has_county_modifier = county_corruption_light_modifier
        }

        remove_county_modifier = county_corruption_light_modifier
    }
    if = {
        limit = {
            has_county_modifier = county_corruption_void_modifier
        }

        remove_county_modifier = county_corruption_void_modifier
    }
    if = {
        limit = {
            has_county_modifier = county_corruption_arcane_modifier
        }

        remove_county_modifier = county_corruption_arcane_modifier
    }
    if = {
        limit = {
            has_county_modifier = county_corruption_fel_modifier
        }

        remove_county_modifier = county_corruption_fel_modifier
    }
    if = {
        limit = {
            has_county_modifier = county_corruption_life_modifier
        }

        remove_county_modifier = county_corruption_life_modifier
    }
    if = {
        limit = {
            has_county_modifier = county_corruption_death_modifier
        }

        remove_county_modifier = county_corruption_death_modifier
    }
}

refresh_corruption_modifiers = { # Modifier scale only works when modifier is added, so we use this to remove modifier and re-add it
    if = {
        limit = {
            has_county_modifier = county_corruption_light_modifier
        }

        add_corruption_modifier = { MOD = county_corruption_light_modifier }
    }
    if = {
        limit = {
            has_county_modifier = county_corruption_void_modifier
        }

        add_corruption_modifier = { MOD = county_corruption_void_modifier }
    }
    if = {
        limit = {
            has_county_modifier = county_corruption_arcane_modifier
        }

        add_corruption_modifier = { MOD = county_corruption_arcane_modifier }
    }
    if = {
        limit = {
            has_county_modifier = county_corruption_fel_modifier
        }

        add_corruption_modifier = { MOD = county_corruption_fel_modifier }
    }
    if = {
        limit = {
            has_county_modifier = county_corruption_life_modifier
        }

        add_corruption_modifier = { MOD = county_corruption_life_modifier }
    }
    if = {
        limit = {
            has_county_modifier = county_corruption_death_modifier
        }

        add_corruption_modifier = { MOD = county_corruption_death_modifier }
    }
}

refresh_corruption_modifiers_all_counties = {
    every_held_title = {
        limit = {
            tier = tier_county
        }

        refresh_corruption_modifiers = yes
    }
}

remove_genocide_variables = {
    if = {
        limit = {
            has_variable = culture_genocided
            OR = {
                NOT = {
                    culture = holder.culture
                }
                always = $REMOVE$
            }
        }

        remove_variable = culture_genocided
    }

    if = {
        limit = {
            has_variable = faith_genocided
            OR = {
                NOT = {
                    faith = holder.faith
                }
                always = $REMOVE$
            }
        }

        remove_variable = faith_genocided
    }
}

corrupt_county_effect = {
    scope:county ?= {
        if = {
            limit = {
                OR = {
                    $ON_START$ = yes
                    AND = {
                        has_variable = purge_population_current_progress
                        var:purge_population_current_progress >= marshal_purge_population_threshold
                    }
                }
            }

            remove_genocide_modifiers = yes

            save_temporary_scope_value_as = {
                name = take_county
                value = yes
            }

            if = {
                limit = {
                    $ON_START$ = yes
                }

                save_temporary_scope_value_as = {
                    name = take_county
                    value = no
                }
            }

            set_county_culture = scope:councillor_liege.culture
            set_county_faith = scope:councillor_liege.faith

            if = {
                limit = {
                    scope:councillor_liege = {
                        can_corrupt_specific_trigger = { BEING = being_light MAGIC = light }
                    }
                    can_corrupt_this_province_valid_trigger = { MOD = county_corruption_light_modifier }
                    can_corrupt_this_province_liege_trigger = { BEING = being_light MAGIC = light }
                }

                add_corruption_modifier = { MOD = county_corruption_light_modifier }
            }
            else_if = {
                limit = {
                    scope:councillor_liege = {
                        can_corrupt_specific_trigger = { BEING = being_void MAGIC = shadow }
                    }
                    can_corrupt_this_province_valid_trigger = { MOD = county_corruption_void_modifier }
                    can_corrupt_this_province_liege_trigger = { BEING = being_void MAGIC = shadow }
                }

                add_corruption_modifier = { MOD = county_corruption_void_modifier }
            }
            else_if = {
                limit = {
                    scope:councillor_liege = {
                        can_corrupt_specific_trigger = { BEING = being_order MAGIC = order }
                    }
                    can_corrupt_this_province_valid_trigger = { MOD = county_corruption_arcane_modifier }
                    can_corrupt_this_province_liege_trigger = { BEING = being_order MAGIC = order }
                }

                add_corruption_modifier = { MOD = county_corruption_arcane_modifier }
            }
            else_if = {
                limit = {
                    scope:councillor_liege = {
                        can_corrupt_specific_trigger = { BEING = being_demon MAGIC = disorder }
                    }
                    can_corrupt_this_province_valid_trigger = { MOD = county_corruption_fel_modifier }
                    can_corrupt_this_province_liege_trigger = { BEING = being_demon MAGIC = disorder }
                }

                add_corruption_modifier = { MOD = county_corruption_fel_modifier }
            }
            else_if = {
                limit = {
                    scope:councillor_liege = {
                        can_corrupt_specific_trigger = { BEING = being_life MAGIC = life }
                    }
                    can_corrupt_this_province_valid_trigger = { MOD = county_corruption_life_modifier }
                    can_corrupt_this_province_liege_trigger = { BEING = being_life MAGIC = life }
                }

                add_corruption_modifier = { MOD = county_corruption_life_modifier }
            }
            else_if = {
                limit = {
                    scope:councillor_liege = {
                        can_corrupt_specific_trigger = { BEING = being_undead MAGIC = death }
                    }
                    can_corrupt_this_province_valid_trigger = { MOD = county_corruption_death_modifier }
                    can_corrupt_this_province_liege_trigger = { BEING = being_undead MAGIC = death }
                }

                add_corruption_modifier = { MOD = county_corruption_death_modifier }

                save_temporary_scope_value_as = {
                    name = take_county
                    value = no
                }

                if = {
                    limit = {
                        $ON_START$ = no
                    }
                    holder = {
                        raise_undead_by_basic_effect = { MASTER = scope:councillor_liege }
                    }
                }
            }

            if = {
                limit = {
                    $ON_START$ = no
                }

                genocide_common_effect = {
                    OPINION = yes
                    MULT = 3
                    MOD = minority_disapproves_of_genocide_population_opinion
                    TAKE_TITLE = scope:take_county
                }
            }
        }
    }
}

cleanse_county_effect = {
    scope:county ?= {
        if = { 
            limit = { 
                has_variable = purge_population_current_progress
                var:purge_population_current_progress >= marshal_purge_population_threshold
            }

            remove_genocide_modifiers = yes

            genocide_culture_effect = { MULT = 2 MOD = genocided_my_culture_opinion }
            genocide_faith_effect = { MOD = genocided_my_faith_opinion }
            genocide_common_effect = {
                OPINION = no
                MULT = 3
                MOD = minority_disapproves_of_genocide_population_opinion
                TAKE_TITLE = yes
            }
            remove_corruption_modifiers = yes

            add_county_modifier = {
                modifier = county_purged_modifier_3
            }

            trigger_event = { 
                on_action = on_reduce_purge_modifier_on_action
                days = 1200
            }

            # TODO: Should destroy random building, not sure if possible in CK3
        }
    }
}

purge_population_effect = {
    scope:county ?= {
        if = {
            limit = {
                has_variable = purge_population_current_progress
                var:purge_population_current_progress >= marshal_purge_population_threshold
            }

            remove_genocide_modifiers = yes

            genocide_culture_effect = { MULT = 2 MOD = genocided_my_culture_opinion }
            genocide_faith_effect = { MOD = genocided_my_faith_opinion }
            genocide_common_effect = {
                OPINION = yes
                MULT = 2
                MOD = minority_disapproves_of_genocide_population_opinion
                TAKE_TITLE = yes
            }

            add_county_modifier = {
                modifier = county_purged_modifier_3
            }

            trigger_event = {
                on_action = on_reduce_purge_modifier_on_action
                days = 1200
            }

            # TODO: Should destroy random building, not sure if possible in CK3
        }
    }
}

genocide_culture_effect = { 
    if = { 
        limit = { 
            allow_genocide_this_province_culture_trigger = { CHARACTER = scope:councillor_liege }
        }

        culture = {
            save_scope_as = old_culture
            change_cultural_acceptance = { 
                target = scope:councillor_liege.culture
                value = { 
                    value = -30
                    multiply = $MULT$
                }
                desc = cultural_acceptance_loss_purge_pupulation
            }
            every_ruler = {
                limit = {
                    NOT = {
                        target_is_liege_or_above = scope:councillor_liege
                    }
                    culture = scope:old_culture
                    NOT = {
                        this = scope:county.holder
                    }
                }
                add_opinion = {
                    target = scope:councillor_liege
                    modifier = $MOD$
                }
            }
        }

        set_variable = { 
            name = culture_genocided
            value = scope:old_culture
        }


        set_county_culture = scope:councillor_liege.culture
    }
}

genocide_faith_effect = { 
    if = { 
        limit = { 
            allow_genocide_this_province_religion_trigger = { CHARACTER = scope:councillor_liege }
        }

        faith = { 
            save_scope_as = old_faith
            every_faith_ruler = {
                limit = {
                    NOT = {
                        target_is_liege_or_above = scope:councillor_liege
                    }
                    NOT = {
                        this = scope:county.holder
                    }
                }
                add_opinion = {
                    target = scope:councillor_liege
                    modifier = $MOD$
                }
            }
        }

        set_variable = {
            name = faith_genocided
            value = scope:old_faith
        }

        if = { # Remove false conversion
            limit = {
                has_county_modifier = false_convert_modifier
            }

            remove_county_modifier = false_convert_modifier
        }

        if = { # Remove false conversion
            limit = {
                has_variable = false_convert
            }

            remove_variable = false_convert
        }

        set_county_faith = scope:councillor_liege.faith
    }
}

genocide_common_effect = {
    scope:councillor_liege = {
        if = {
            limit = {
                $OPINION$ = yes
                any_vassal = {
                    has_vassal_stance = minority
                }
            }
            custom_tooltip = minority_disapproves_conversion
            hidden_effect = {
                every_vassal = {
                    limit = {
                        has_vassal_stance = minority
                        NOT = {
                            this = scope:county.holder
                        }
                    }
                    add_opinion = {
                        target = scope:councillor_liege
                        modifier = $MOD$
                    }
                }
            }
        }

        if = {
            limit = { government_has_flag = government_dark_frenzy_from_conversions }
            change_dark_frenzy_effect = { VALUE = dark_frenzy_from_convert_county }
        }
    }

    change_county_control = {
        value = -30
        multiply = $MULT$
    }
    change_development_level = {
        value = -10
        multiply = $MULT$
    }

    holder = {
        save_temporary_scope_as = old_holder
    }

    scope:old_holder = {
        add_opinion = {
            target = scope:councillor_liege
            modifier = ruler_disapproves_of_genocide_population_opinion
        }
    }

    if = { # Take the title you just genocided
        limit = {
            $TAKE_TITLE$ = yes
            NOT = {
                holder = scope:councillor_liege
            }
            NOR = {
                holder.culture = scope:councillor_liege.culture
                holder.faith = scope:councillor_liege.faith
            }
        }

        create_title_and_vassal_change = {
            type = usurped
            add_claim_on_loss = yes
            save_scope_as = change
        }

        change_title_holder = {
            holder = scope:councillor_liege
            change = scope:change
            take_baronies = yes
        }

        resolve_title_and_vassal_change = scope:change

        scope:old_holder = { # If this was their only title they're included in the genocide
            if = {
                limit = {
                    is_ruler = no
                }

                death = {
                    death_reason = death_execution
                    killer = scope:councillor_liege
                }
            }
        }
    }
}

setup_genocide_peasant_leader_effect = {
    if = {
        limit = {
            NOT = { exists = scope:peasant_leader }
        }
        create_character = {
            location = scope:county.title_province
            template = peasant_faction_leader_template
            faith = scope:county.faith
            culture = scope:county.culture
            gender_female_chance = {
                if = {
                    limit = { scope:county.faith = { has_doctrine = doctrine_gender_male_dominated } }
                    add = 0
                }
                else_if = {
                    limit = { scope:county.faith = { has_doctrine = doctrine_gender_female_dominated } }
                    add = 100
                }
                else = {
                    add = 50
                }
            }
            save_scope_as = peasant_leader
            after_creation = {
                add_character_flag = peasant_faction_random_peasant
                add_character_flag = corruption_revolt_random_peasant

                set_relation_rival = { TARGET = scope:councillor_liege }
                give_rebel_appropriate_being_trait_effect = yes
            }
        }
    }

    create_dynamic_title = {
        tier = duchy
        name = FACTION_PEASANT_TITLE_NAME
    }
    create_title_and_vassal_change = {
        type = created
        save_scope_as = change
        add_claim_on_loss = no
    }

    scope:new_title = {
        set_capital_county = scope:county
        set_landless_title = yes
        set_destroy_on_succession = yes
        set_delete_on_destroy = yes
        set_no_automatic_claims = yes
        set_definitive_form = yes
        set_can_be_named_after_dynasty = no
        change_title_holder = {
            holder = scope:peasant_leader
            change = scope:change
        }
    }
    resolve_title_and_vassal_change = scope:change
    scope:county = {
        save_scope_as = capital_county
    }
    scope:peasant_leader = {
        set_variable = {
            name = peasant_title
            value = scope:new_title
        }

        start_war = {
            casus_belli = populist_war
            target = scope:councillor_liege
            claimant = scope:peasant_leader
            target_title = scope:county
        }
        spawn_rebel_army_effect = yes
    }
    scope:new_title = { generate_coa = factions }
}

give_rebel_appropriate_being_trait_effect = {
    if = {
        limit = {
            has_being_trait_trigger = no
        }
        if = {
            limit = {
                scope:county = {
                    has_county_modifier = county_corruption_light_modifier
                }
            }

            add_trait = being_light
        }
        else_if = {
            limit = {
                scope:county = {
                    has_county_modifier = county_corruption_void_modifier
                }
            }

            add_trait = being_void
        }
        else_if = {
            limit = {
                scope:county = {
                    has_county_modifier = county_corruption_arcane_modifier
                }
            }

            add_trait = being_order
        }
        else_if = {
            limit = {
                scope:county = {
                    has_county_modifier = county_corruption_fel_modifier
                }
            }

            add_trait = being_demon
        }
        else_if = {
            limit = {
                scope:county = {
                    has_county_modifier = county_corruption_life_modifier
                }
            }

            add_trait = being_life
        }
        else_if = {
            limit = {
                scope:county = {
                    has_county_modifier = county_corruption_death_modifier
                }
            }

            add_trait = being_undead
        }
    }
}

spawn_rebel_army_effect = {
    spawn_army = {
        name = genocide_task.0101.army_name
        levies = {
            add = 500
            add = scope:county.county_levies_to_raise
            scope:councillor_liege = {
                every_realm_county = {
                    limit = {
                        trigger_if = {
                            limit = {
                                allow_genocide_this_province_culture_trigger = { CHARACTER = scope:councillor_liege }
                            }

                            culture = scope:county.culture
                        }

                        trigger_if = {
                            limit = {
                                allow_genocide_this_province_religion_trigger = { CHARACTER = scope:councillor_liege }
                            }

                            faith = scope:county.faith
                        }
                    }

                    add = {
                        value = county_levies_to_raise
                        divide = 10
                    }
                }
            }
        }
        location = scope:county.title_province
        inheritable = no
        uses_supply = no

        save_scope_as = revolt_army
    }
}